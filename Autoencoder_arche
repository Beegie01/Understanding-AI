def build_autoencoder(n_features, encoder_dim):
    """build a standard autoencoder network, where
    input and output layers have same number
    of units.
    
    Returns:
    autoencoder, encoder, decoder
    
    output dimension is defined by number of units,
    and input dimension by n_features arg.
    encoder layer is the first hidden layer.
    decoder layer is the output layer.
    autoencoder is simply the stacking of both
    encoder and decoder layers."""
    
    K.clear_session()
    
    encoder = models.Sequential(name='Encoder')
    encoder.add(layers.Dense(units=encoder_dim, input_shape=[n_features], activation='relu'))
    
    decoder = models.Sequential(name='Decoder')
    decoder.add(layers.Dense(units=n_features, input_shape=[encoder_dim], activation='relu'))
    
    autoencoder = models.Sequential([encoder, decoder])
    
    autoencoder.compile(optimizer=optimizers.SGD(learning_rate=1.5),
                       loss='binary_crossentropy')
    
    autoencoder.summary()
    
    return autoencoder, encoder, decoder
